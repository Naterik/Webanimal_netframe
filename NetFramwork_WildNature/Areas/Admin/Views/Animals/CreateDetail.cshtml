@model List<NetFramwork_WildNature.Db.AnimalDetail>

@{
    ViewBag.Title = "Create Animal Details";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>Create Animal Details</h2>

@using (Html.BeginForm("CreateDetail", "Animals", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div id="animal-details-container">
        @for (int i = 0; i < Model.Count; i++)
        {
            <div class="animal-detail-fields">
                <h4>Detail @(i + 1)</h4>
                <div class="form-group">
                    @Html.LabelFor(model => model[i].Weight)
                    @Html.EditorFor(model => model[i].Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].Weight, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model[i].Height)
                    @Html.EditorFor(model => model[i].Height, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].Height, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model[i].Origin)
                    @Html.EditorFor(model => model[i].Origin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].Origin, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model[i].ColorID, "Màu lông", new { @class = "control-label" })
                    @Html.DropDownListFor(model => model[i].ColorID, (SelectList)ViewBag.ColorID, "Select Color", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model[i].ColorID, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model[i].SpecieID, "Giống loài", new { @class = "control-label" })
                    @Html.DropDownListFor(model => model[i].SpecieID, (SelectList)ViewBag.SpecieID, "Select Species", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model[i].SpecieID, "", new { @class = "text-danger" })
                </div>
                <button type="button" class="btn btn-danger" onclick="removeAnimalDetail(this)">Remove</button>
            </div>
        }
    </div>
    <button type="button" class="btn btn-success" onclick="addAnimalDetail()">Add More Details</button>
    <div class="form-group">
        <label for="Images">Upload Images</label>
        <input type="file" id="Images" name="Images" accept="image/*" multiple onchange="displaySelectedImages()" />
    </div>
    <div id="image-preview" class="row">
        <!-- Image previews will be displayed here -->
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
}

@section Scripts {
    <script type="text/javascript">
        function addAnimalDetail() {
            var index = $('#animal-details-container .animal-detail-fields').length;
            var template = $('#animal-details-container .animal-detail-fields').first().clone();
            template.find('input, select').each(function () {
                var name = $(this).attr('name').replace('[0]', '[' + index + ']');
                $(this).attr('name', name);
                $(this).attr('id', name);
                $(this).val('');
            });
            $('#animal-details-container').append(template);
        }

        function removeAnimalDetail(button) {
            $(button).closest('.animal-detail-fields').remove();
        }

        function displaySelectedImages() {
            var imagePreview = document.getElementById('image-preview');
            imagePreview.innerHTML = ''; // Clear any existing images
            var files = document.getElementById('Images').files;
            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    var imgElement = document.createElement('img');
                    imgElement.src = e.target.result;
                    imgElement.className = 'img-thumbnail';
                    imgElement.style = 'max-height: 100px; margin: 5px;';
                    imagePreview.appendChild(imgElement);
                };
                reader.readAsDataURL(file);
            }
        }
    </script>
}
